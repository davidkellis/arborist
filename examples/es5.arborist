# This grammar is based on https://raw.githubusercontent.com/pegjs/pegjs/master/examples/javascript.pegjs

javascript {

  // JavaScript Grammar
  // ==================
  //
  // Based on grammar from ECMA-262, 5.1 Edition [1]. Generated parser builds a
  // syntax tree compatible with the ESTree spec [2].
  //
  // Limitations:
  //
  //   * Non-BMP characters are completely ignored to avoid surrogate pair
  //     handling.
  //
  //   * One can create identifiers containing illegal characters using Unicode
  //     escape sequences. For example, "abcd\u0020efgh" is not a valid
  //     identifier, but it is accepted by the parser.
  //
  //   * Strict mode is not recognized. This means that within strict mode code,
  //     "implements", "interface", "let", "package", "private", "protected",
  //     "public", "static" and "yield" can be used as names. Many other
  //     restrictions and exceptions from Annex C are also not applied.
  //
  // All the limitations could be resolved, but the costs would likely outweigh
  // the benefits.
  //
  // Many thanks to inimino [3] for his grammar [4] which helped me to solve some
  // problems (such as automatic semicolon insertion) and also served to double
  // check that I converted the original grammar correctly.
  //
  // [1] http://www.ecma-international.org/publications/standards/Ecma-262.htm
  // [2] https://github.com/estree/estree
  // [3] http://inimino.org/~inimino/blog/
  // [4] http://boshi.inimino.org/3box/asof/1270029991384/PEG/ECMAScript_unified.peg

  Start
    <- __ Program __

  // ----- A.1 Lexical Grammar -----

  SourceCharacter
    <- .

  WhiteSpace
    <- "\t"
    #/ "\v"
    #/ "\f"
    / " "
    / "\u00A0"
    / "\uFEFF"
    / Zs

  LineTerminator
    <- "\n" | "\r" | "\u2028" | "\u2029"

  LineTerminatorSequence
    <- "\n"
    / "\r\n"
    / "\r"
    / "\u2028"
    / "\u2029"

  Comment
    <- MultiLineComment
    / SingleLineComment

  MultiLineComment
    <- "/*" (!"*/" SourceCharacter)* "*/"

  MultiLineCommentNoLineTerminator
    <- "/*" (!("*/" / LineTerminator) SourceCharacter)* "*/"

  SingleLineComment
    <- "//" (!LineTerminator SourceCharacter)*

  Identifier
    <- !ReservedWord IdentifierName

  IdentifierName
    <- IdentifierStart IdentifierPart*

  IdentifierStart
    <- UnicodeLetter
    / "$"
    / "_"
    / "\\" UnicodeEscapeSequence

  IdentifierPart
    <- IdentifierStart
    / UnicodeCombiningMark
    / UnicodeDigit
    / UnicodeConnectorPunctuation
    / "\u200C"
    / "\u200D"

  UnicodeLetter
    <- Lu
    / Ll
    / Lt
    / Lm
    / Lo
    / Nl

  UnicodeCombiningMark
    <- Mn
    / Mc

  UnicodeDigit
    <- Nd

  UnicodeConnectorPunctuation
    <- Pc

  ReservedWord
    <- Keyword
    / FutureReservedWord
    / NullLiteral
    / BooleanLiteral

  Keyword
    <- BreakToken
    / CaseToken
    / CatchToken
    / ContinueToken
    / DebuggerToken
    / DefaultToken
    / DeleteToken
    / DoToken
    / ElseToken
    / FinallyToken
    / ForToken
    / FunctionToken
    / IfToken
    / InstanceofToken
    / InToken
    / NewToken
    / ReturnToken
    / SwitchToken
    / ThisToken
    / ThrowToken
    / TryToken
    / TypeofToken
    / VarToken
    / VoidToken
    / WhileToken
    / WithToken

  FutureReservedWord
    <- ClassToken
    / ConstToken
    / EnumToken
    / ExportToken
    / ExtendsToken
    / ImportToken
    / SuperToken

  Literal
    <- NullLiteral
    / BooleanLiteral
    / NumericLiteral
    / StringLiteral
    / RegularExpressionLiteral

  NullLiteral
    <- NullToken

  BooleanLiteral
    <- TrueToken
    / FalseToken

  // The "!(IdentifierStart / DecimalDigit)" predicate is not part of the official
  // grammar, it comes from text in section 7.8.3.
  NumericLiteral
    <- HexIntegerLiteral !(IdentifierStart / DecimalDigit)
    / DecimalLiteral !(IdentifierStart / DecimalDigit)

  DecimalLiteral
    <- DecimalIntegerLiteral "." DecimalDigit* ExponentPart?
    / "." DecimalDigit+ ExponentPart?
    / DecimalIntegerLiteral ExponentPart?

  DecimalIntegerLiteral
    <- "0"
    / NonZeroDigit DecimalDigit*

  DecimalDigit
    <- "0".."9"

  NonZeroDigit
    <- "1".."9"

  ExponentPart
    <- ExponentIndicator SignedInteger

  ExponentIndicator
    <- "e" | "E"

  SignedInteger
    <- ("+" | "-")? DecimalDigit+

  HexIntegerLiteral
    <- ("0x" | "0X") HexDigit+

  HexDigit
    <- "0".."9" / "a".."f" / "A".."F"

  StringLiteral
    <- "\"" DoubleStringCharacter* "\""
    / "'" SingleStringCharacter* "'"

  DoubleStringCharacter
    <- !("\"" / "\\" / LineTerminator) SourceCharacter
    / "\\" EscapeSequence
    / LineContinuation

  SingleStringCharacter
    <- !("'" / "\\" / LineTerminator) SourceCharacter
    / "\\" EscapeSequence
    / LineContinuation

  LineContinuation
    <- "\\" LineTerminatorSequence

  EscapeSequence
    <- CharacterEscapeSequence
    / "0" !DecimalDigit
    / HexEscapeSequence
    / UnicodeEscapeSequence

  CharacterEscapeSequence
    <- SingleEscapeCharacter
    / NonEscapeCharacter

  SingleEscapeCharacter
    <- "'"
    / "\""
    / "\\"
    / "b"
    / "f"
    / "n"
    / "r"
    / "t"
    / "v"

  NonEscapeCharacter
    <- !(EscapeCharacter / LineTerminator) SourceCharacter

  EscapeCharacter
    <- SingleEscapeCharacter
    / DecimalDigit
    / "x"
    / "u"

  HexEscapeSequence
    <- "x" (HexDigit HexDigit)

  UnicodeEscapeSequence
    <- "u" (HexDigit HexDigit HexDigit HexDigit)

  RegularExpressionLiteral
    <- "/" RegularExpressionBody "/" RegularExpressionFlags

  RegularExpressionBody
    <- RegularExpressionFirstChar RegularExpressionChar*

  RegularExpressionFirstChar
    <- !("*" | "\\" | "/" | "[") RegularExpressionNonTerminator
    / RegularExpressionBackslashSequence
    / RegularExpressionClass

  RegularExpressionChar
    <- !("\\" | "/" | "[") RegularExpressionNonTerminator
    / RegularExpressionBackslashSequence
    / RegularExpressionClass

  RegularExpressionBackslashSequence
    <- "\\" RegularExpressionNonTerminator

  RegularExpressionNonTerminator
    <- !LineTerminator SourceCharacter

  RegularExpressionClass
    <- "[" RegularExpressionClassChar* "]"

  RegularExpressionClassChar
    <- !("]" | "\\") RegularExpressionNonTerminator
    / RegularExpressionBackslashSequence

  RegularExpressionFlags
    <- IdentifierPart*

  
  // Tokens

  BreakToken      <- "break"      !IdentifierPart
  CaseToken       <- "case"       !IdentifierPart
  CatchToken      <- "catch"      !IdentifierPart
  ClassToken      <- "class"      !IdentifierPart
  ConstToken      <- "const"      !IdentifierPart
  ContinueToken   <- "continue"   !IdentifierPart
  DebuggerToken   <- "debugger"   !IdentifierPart
  DefaultToken    <- "default"    !IdentifierPart
  DeleteToken     <- "delete"     !IdentifierPart
  DoToken         <- "do"         !IdentifierPart
  ElseToken       <- "else"       !IdentifierPart
  EnumToken       <- "enum"       !IdentifierPart
  ExportToken     <- "export"     !IdentifierPart
  ExtendsToken    <- "extends"    !IdentifierPart
  FalseToken      <- "false"      !IdentifierPart
  FinallyToken    <- "finally"    !IdentifierPart
  ForToken        <- "for"        !IdentifierPart
  FunctionToken   <- "function"   !IdentifierPart
  GetToken        <- "get"        !IdentifierPart
  IfToken         <- "if"         !IdentifierPart
  ImportToken     <- "import"     !IdentifierPart
  InstanceofToken <- "instanceof" !IdentifierPart
  InToken         <- "in"         !IdentifierPart
  NewToken        <- "new"        !IdentifierPart
  NullToken       <- "null"       !IdentifierPart
  ReturnToken     <- "return"     !IdentifierPart
  SetToken        <- "set"        !IdentifierPart
  SuperToken      <- "super"      !IdentifierPart
  SwitchToken     <- "switch"     !IdentifierPart
  ThisToken       <- "this"       !IdentifierPart
  ThrowToken      <- "throw"      !IdentifierPart
  TrueToken       <- "true"       !IdentifierPart
  TryToken        <- "try"        !IdentifierPart
  TypeofToken     <- "typeof"     !IdentifierPart
  VarToken        <- "var"        !IdentifierPart
  VoidToken       <- "void"       !IdentifierPart
  WhileToken      <- "while"      !IdentifierPart
  WithToken       <- "with"       !IdentifierPart

  // Skipped

  __
    <- (WhiteSpace / LineTerminatorSequence / Comment)*

  _
    <- (WhiteSpace / MultiLineCommentNoLineTerminator)*

  // Automatic Semicolon Insertion

  EOS
    <- __ ";"
    / _ SingleLineComment? LineTerminatorSequence
    / _ &"}"
    / __ EOF

  EOF
    <- !.

  // ----- A.2 Number Conversions -----

  // Irrelevant.

  // ----- A.3 Expressions -----

  PrimaryExpression
    <- ThisToken
    / Identifier
    / Literal
    / ArrayLiteral
    / ObjectLiteral
    / "(" __ expression=Expression __ ")"

  ArrayLiteral
    <- "[" __ (Elision __)? "]"
    / "[" __ ElementList __ "]"
    / "[" __ ElementList __ "," __ (Elision __)? "]"

  ElementList
    <- ( (Elision __)? AssignmentExpression )
       ( __ "," __ (Elision __)? AssignmentExpression )*

  Elision
    <- "," (__ ",")*

  ObjectLiteral
    <- "{" __ "}"
    / "{" __ PropertyNameAndValueList __ "}"
    / "{" __ PropertyNameAndValueList __ "," __ "}"

  PropertyNameAndValueList
    <- PropertyAssignment (__ "," __ PropertyAssignment)*

  PropertyAssignment
    <- PropertyName __ ":" __ AssignmentExpression
    / GetToken __ key=PropertyName __
      "(" __ ")" __
      "{" __ body=FunctionBody __ "}"
    / SetToken __ key=PropertyName __
      "(" __ params=PropertySetParameterList __ ")" __
      "{" __ body=FunctionBody __ "}"

  PropertyName
    <- IdentifierName
    / StringLiteral
    / NumericLiteral

  PropertySetParameterList
    <- id=Identifier

  MemberExpression
    <- head=(
          PrimaryExpression
        / FunctionExpression
        / NewToken __ callee=MemberExpression __ args=Arguments
      )
      tail=(
          __ "[" __ property=Expression __ "]"
        / __ "." __ property=IdentifierName
      )*

  NewExpression
    <- MemberExpression
    / NewToken __ callee=NewExpression

  CallExpression
    <- head=(
        callee=MemberExpression __ args=Arguments
      )
      tail=(
          __ args=Arguments
        / __ "[" __ property=Expression __ "]"
        / __ "." __ property=IdentifierName
      )*

  Arguments
    <- "(" __ args=(ArgumentList __)? ")"

  ArgumentList
    <- head=AssignmentExpression tail=(__ "," __ AssignmentExpression)*

  LeftHandSideExpression
    <- CallExpression
    / NewExpression

  PostfixExpression
    <- argument=LeftHandSideExpression _ operator=PostfixOperator
    / LeftHandSideExpression

  PostfixOperator
    <- "++"
    / "--"

  UnaryExpression
    <- PostfixExpression
    / operator=UnaryOperator __ argument=UnaryExpression

  UnaryOperator
    <- DeleteToken
    / VoidToken
    / TypeofToken
    / "++"
    / "--"
    / ("+" !"=")
    / ("-" !"=")
    / "~"
    / "!"

  MultiplicativeExpression
    <- head=UnaryExpression
      tail=(__ MultiplicativeOperator __ UnaryExpression)*
     

  MultiplicativeOperator
    <- ("*" !"=")
    / ("/" !"=")
    / ("%" !"=")

  AdditiveExpression
    <- head=MultiplicativeExpression
      tail=(__ AdditiveOperator __ MultiplicativeExpression)*
     

  AdditiveOperator
    <- ("+" !("+" | "="))
    / ("-" !("-" | "="))

  ShiftExpression
    <- head=AdditiveExpression
      tail=(__ ShiftOperator __ AdditiveExpression)*
     

  ShiftOperator
    <- ("<<"  !"=")
    / (">>>" !"=")
    / (">>"  !"=")

  RelationalExpression
    <- head=ShiftExpression
      tail=(__ RelationalOperator __ ShiftExpression)*
     

  RelationalOperator
    <- "<="
    / ">="
    / ("<" !"<")
    / (">" !">")
    / InstanceofToken
    / InToken

  RelationalExpressionNoIn
    <- head=ShiftExpression
      tail=(__ RelationalOperatorNoIn __ ShiftExpression)*
     

  RelationalOperatorNoIn
    <- "<="
    / ">="
    / ("<" !"<")
    / (">" !">")
    / InstanceofToken

  EqualityExpression
    <- head=RelationalExpression
      tail=(__ EqualityOperator __ RelationalExpression)*
     

  EqualityExpressionNoIn
    <- head=RelationalExpressionNoIn
      tail=(__ EqualityOperator __ RelationalExpressionNoIn)*
     

  EqualityOperator
    <- "==="
    / "!=="
    / "=="
    / "!="

  BitwiseANDExpression
    <- head=EqualityExpression
      tail=(__ BitwiseANDOperator __ EqualityExpression)*
     

  BitwiseANDExpressionNoIn
    <- head=EqualityExpressionNoIn
      tail=(__ BitwiseANDOperator __ EqualityExpressionNoIn)*
     

  BitwiseANDOperator
    <- ("&" !("&" | "="))

  BitwiseXORExpression
    <- head=BitwiseANDExpression
      tail=(__ BitwiseXOROperator __ BitwiseANDExpression)*
     

  BitwiseXORExpressionNoIn
    <- head=BitwiseANDExpressionNoIn
      tail=(__ BitwiseXOROperator __ BitwiseANDExpressionNoIn)*
     

  BitwiseXOROperator
    <- ("^" !"=")

  BitwiseORExpression
    <- head=BitwiseXORExpression
      tail=(__ BitwiseOROperator __ BitwiseXORExpression)*
     

  BitwiseORExpressionNoIn
    <- head=BitwiseXORExpressionNoIn
      tail=(__ BitwiseOROperator __ BitwiseXORExpressionNoIn)*
     

  BitwiseOROperator
    <- ("|" !("|" | "="))

  LogicalANDExpression
    <- head=BitwiseORExpression
      tail=(__ LogicalANDOperator __ BitwiseORExpression)*
     

  LogicalANDExpressionNoIn
    <- head=BitwiseORExpressionNoIn
      tail=(__ LogicalANDOperator __ BitwiseORExpressionNoIn)*
     

  LogicalANDOperator
    <- "&&"

  LogicalORExpression
    <- head=LogicalANDExpression
      tail=(__ LogicalOROperator __ LogicalANDExpression)*
     

  LogicalORExpressionNoIn
    <- head=LogicalANDExpressionNoIn
      tail=(__ LogicalOROperator __ LogicalANDExpressionNoIn)*
     

  LogicalOROperator
    <- "||"

  ConditionalExpression
    <- test=LogicalORExpression __
      "?" __ consequent=AssignmentExpression __
      ":" __ alternate=AssignmentExpression
    / LogicalORExpression

  ConditionalExpressionNoIn
    <- test=LogicalORExpressionNoIn __
      "?" __ consequent=AssignmentExpression __
      ":" __ alternate=AssignmentExpressionNoIn
    / LogicalORExpressionNoIn

  AssignmentExpression
    <- left=LeftHandSideExpression __
      "=" !"=" __
      right=AssignmentExpression
    / left=LeftHandSideExpression __
      operator=AssignmentOperator __
      right=AssignmentExpression
    / ConditionalExpression

  AssignmentExpressionNoIn
    <- left=LeftHandSideExpression __
      "=" !"=" __
      right=AssignmentExpressionNoIn
    / left=LeftHandSideExpression __
      operator=AssignmentOperator __
      right=AssignmentExpressionNoIn
    / ConditionalExpressionNoIn

  AssignmentOperator
    <- "*="
    / "/="
    / "%="
    / "+="
    / "-="
    / "<<="
    / ">>="
    / ">>>="
    / "&="
    / "^="
    / "|="

  Expression
    <- head=AssignmentExpression tail=(__ "," __ AssignmentExpression)* 

  ExpressionNoIn
    <- head=AssignmentExpressionNoIn tail=(__ "," __ AssignmentExpressionNoIn)*

  // ----- A.4 Statements -----

  Statement
    <- Block
    / VariableStatement
    / EmptyStatement
    / ExpressionStatement
    / IfStatement
    / IterationStatement
    / ContinueStatement
    / BreakStatement
    / ReturnStatement
    / WithStatement
    / LabelledStatement
    / SwitchStatement
    / ThrowStatement
    / TryStatement
    / DebuggerStatement

  Block
    <- "{" __ body=(StatementList __)? "}"

  StatementList
    <- head=Statement tail=(__ Statement)*

  VariableStatement
    <- VarToken __ declarations=VariableDeclarationList EOS

  VariableDeclarationList
    <- head=VariableDeclaration tail=(__ "," __ VariableDeclaration)*
    
  VariableDeclarationListNoIn
    <- head=VariableDeclarationNoIn tail=(__ "," __ VariableDeclarationNoIn)*

  VariableDeclaration
    <- id=Identifier init=(__ Initialiser)?

  VariableDeclarationNoIn
    <- id=Identifier init=(__ InitialiserNoIn)?

  Initialiser
    <- "=" !"=" __ expression=AssignmentExpression

  InitialiserNoIn
    <- "=" !"=" __ expression=AssignmentExpressionNoIn

  EmptyStatement
    <- ";"

  ExpressionStatement
    <- !("{" / FunctionToken) expression=Expression EOS

  IfStatement
    <- IfToken __ "(" __ test=Expression __ ")" __
      consequent=Statement __
      ElseToken __
      alternate=Statement
    / IfToken __ "(" __ test=Expression __ ")" __
      consequent=Statement

  IterationStatement
    <- DoToken __
      body=Statement __
      WhileToken __ "(" __ test=Expression __ ")" EOS
     
    / WhileToken __ "(" __ test=Expression __ ")" __
      body=Statement
     
    / ForToken __
      "(" __
      init=(ExpressionNoIn __)? ";" __
      test=(Expression __)? ";" __
      update=(Expression __)?
      ")" __
      body=Statement
    / ForToken __
      "(" __
      VarToken __ declarations=VariableDeclarationListNoIn __ ";" __
      test=(Expression __)? ";" __
      update=(Expression __)?
      ")" __
      body=Statement

    / ForToken __
      "(" __
      left=LeftHandSideExpression __
      InToken __
      right=Expression __
      ")" __
      body=Statement
    / ForToken __
      "(" __
      VarToken __ declarations=VariableDeclarationListNoIn __
      InToken __
      right=Expression __
      ")" __
      body=Statement

  ContinueStatement
    <- ContinueToken EOS
    / ContinueToken _ label=Identifier EOS

  BreakStatement
    <- BreakToken EOS
    / BreakToken _ label=Identifier EOS

  ReturnStatement
    <- ReturnToken EOS
    / ReturnToken _ argument=Expression EOS

  WithStatement
    <- WithToken __ "(" __ object=Expression __ ")" __
      body=Statement

  SwitchStatement
    <- SwitchToken __ "(" __ discriminant=Expression __ ")" __
      cases=CaseBlock

  CaseBlock
    <- "{" __ clauses=(CaseClauses __)? "}"
    / "{" __
      before=(CaseClauses __)?
      default_=DefaultClause __
      after=(CaseClauses __)? "}"

  CaseClauses
    <- head=CaseClause tail=(__ CaseClause)*

  CaseClause
    <- CaseToken __ test=Expression __ ":" consequent=(__ StatementList)?

  DefaultClause
    <- DefaultToken __ ":" consequent=(__ StatementList)?

  LabelledStatement
    <- label=Identifier __ ":" __ body=Statement

  ThrowStatement
    <- ThrowToken _ argument=Expression EOS

  TryStatement
    <- TryToken __ block=Block __ handler=Catch __ finalizer=Finally
    / TryToken __ block=Block __ handler=Catch
    / TryToken __ block=Block __ finalizer=Finally

  Catch
    <- CatchToken __ "(" __ param=Identifier __ ")" __ body=Block

  Finally
    <- FinallyToken __ block=Block

  DebuggerStatement
    <- DebuggerToken EOS

  // ----- A.5 Functions and Programs -----

  FunctionDeclaration
    <- FunctionToken __ id=Identifier __
      "(" __ params=(FormalParameterList __)? ")" __
      "{" __ body=FunctionBody __ "}"

  FunctionExpression
    <- FunctionToken __ id=(Identifier __)?
      "(" __ params=(FormalParameterList __)? ")" __
      "{" __ body=FunctionBody __ "}"

  FormalParameterList
    <- head=Identifier tail=(__ "," __ Identifier)*

  FunctionBody
    <- body=SourceElements?

  Program
    <- body=SourceElements?

  SourceElements
    <- head=SourceElement tail=(__ SourceElement)*

  SourceElement
    <- Statement
    / FunctionDeclaration

  // ----- A.6 Universal Resource Identifier Character Classes -----

  // Irrelevant.

  // ----- A.7 Regular Expressions -----

  // Irrelevant.

  // ----- A.8 JSON -----

  // Irrelevant.


  // Unicode Character Categories
  //
  // Extracted from the following Unicode Character Database file:
  //
  //   http://www.unicode.org/Public/11.0.0/ucd/extracted/DerivedGeneralCategory.txt
  //
  // Unix magic used:
  //
  //   grep "; $CATEGORY" DerivedGeneralCategory.txt |   # Filter characters
  //     cut -f1 -d " " |                                # Extract code points
  //     grep -v '[0-9a-fA-F]\{5\}' |                    # Exclude non-BMP characters
  //     sed -e 's/\.\./-/' |                            # Adjust formatting
  //     sed -e 's/\([0-9a-fA-F]\{4\}\)/\\u\1/g' |       # Adjust formatting
  //     tr -d '\n'                                      # Join lines
  //
  // ECMA-262 allows using Unicode 3.0 or later, version 8.0.0 was the latest one
  // at the time of writing.
  //
  // Non-BMP characters are completely ignored to avoid surrogate pair handling
  // (detecting surrogate pairs isn't possible with a simple character class and
  // other methods would degrade performance). I don't consider it a big deal as
  // even parsers in JavaScript engines of common browsers seem to ignore them.

  // Letter, Lowercase
  Ll <- unicode_lower

  // Letter, Modifier
  Lm <- unicode_modifier

  // Letter, Other
  Lo <- unicode_other_letter

  // Letter, Titlecase
  Lt <- unicode_titlecase

  // Letter, Uppercase
  Lu <- unicode_upper

  // Mark, Spacing Combining
  Mc <- unicode_mark_spacing_combining

  // Mark, Nonspacing
  Mn <- unicode_mark_nonspacing

  // Number, Decimal Digit
  Nd <- unicode_digit

  // Number, Letter
  Nl <- unicode_number_letter

  // Punctuation, Connector
  Pc <- unicode_punctuation_connector

  // Separator, Space
  Zs <- unicode_separator_space


  unicode_digit <- "\u{30}".."\u{39}" | "\u{660}".."\u{669}" | "\u{6F0}".."\u{6F9}" | "\u{7C0}".."\u{7C9}" | "\u{966}".."\u{96F}" | "\u{9E6}".."\u{9EF}" | "\u{A66}".."\u{A6F}" | "\u{AE6}".."\u{AEF}" | "\u{B66}".."\u{B6F}" | "\u{BE6}".."\u{BEF}" | "\u{C66}".."\u{C6F}" | "\u{CE6}".."\u{CEF}" | "\u{D66}".."\u{D6F}" | "\u{DE6}".."\u{DEF}" | "\u{E50}".."\u{E59}" | "\u{ED0}".."\u{ED9}" | "\u{F20}".."\u{F29}" | "\u{1040}".."\u{1049}" | "\u{1090}".."\u{1099}" | "\u{17E0}".."\u{17E9}" | "\u{1810}".."\u{1819}" | "\u{1946}".."\u{194F}" | "\u{19D0}".."\u{19D9}" | "\u{1A80}".."\u{1A89}" | "\u{1A90}".."\u{1A99}" | "\u{1B50}".."\u{1B59}" | "\u{1BB0}".."\u{1BB9}" | "\u{1C40}".."\u{1C49}" | "\u{1C50}".."\u{1C59}" | "\u{A620}".."\u{A629}" | "\u{A8D0}".."\u{A8D9}" | "\u{A900}".."\u{A909}" | "\u{A9D0}".."\u{A9D9}" | "\u{A9F0}".."\u{A9F9}" | "\u{AA50}".."\u{AA59}" | "\u{ABF0}".."\u{ABF9}" | "\u{FF10}".."\u{FF19}" | "\u{104A0}".."\u{104A9}" | "\u{10D30}".."\u{10D39}" | "\u{11066}".."\u{1106F}" | "\u{110F0}".."\u{110F9}" | "\u{11136}".."\u{1113F}" | "\u{111D0}".."\u{111D9}" | "\u{112F0}".."\u{112F9}" | "\u{11450}".."\u{11459}" | "\u{114D0}".."\u{114D9}" | "\u{11650}".."\u{11659}" | "\u{116C0}".."\u{116C9}" | "\u{11730}".."\u{11739}" | "\u{118E0}".."\u{118E9}" | "\u{11C50}".."\u{11C59}" | "\u{11D50}".."\u{11D59}" | "\u{11DA0}".."\u{11DA9}" | "\u{16A60}".."\u{16A69}" | "\u{16B50}".."\u{16B59}" | "\u{1D7CE}".."\u{1D7FF}" | "\u{1E950}".."\u{1E959}"
  unicode_upper <- "\u{41}".."\u{5A}" | "\u{C0}".."\u{D6}" | "\u{D8}".."\u{DE}" | "\u{100}" | "\u{102}" | "\u{104}" | "\u{106}" | "\u{108}" | "\u{10A}" | "\u{10C}" | "\u{10E}" | "\u{110}" | "\u{112}" | "\u{114}" | "\u{116}" | "\u{118}" | "\u{11A}" | "\u{11C}" | "\u{11E}" | "\u{120}" | "\u{122}" | "\u{124}" | "\u{126}" | "\u{128}" | "\u{12A}" | "\u{12C}" | "\u{12E}" | "\u{130}" | "\u{132}" | "\u{134}" | "\u{136}" | "\u{139}" | "\u{13B}" | "\u{13D}" | "\u{13F}" | "\u{141}" | "\u{143}" | "\u{145}" | "\u{147}" | "\u{14A}" | "\u{14C}" | "\u{14E}" | "\u{150}" | "\u{152}" | "\u{154}" | "\u{156}" | "\u{158}" | "\u{15A}" | "\u{15C}" | "\u{15E}" | "\u{160}" | "\u{162}" | "\u{164}" | "\u{166}" | "\u{168}" | "\u{16A}" | "\u{16C}" | "\u{16E}" | "\u{170}" | "\u{172}" | "\u{174}" | "\u{176}" | "\u{178}".."\u{179}" | "\u{17B}" | "\u{17D}" | "\u{181}".."\u{182}" | "\u{184}" | "\u{186}".."\u{187}" | "\u{189}".."\u{18B}" | "\u{18E}".."\u{191}" | "\u{193}".."\u{194}" | "\u{196}".."\u{198}" | "\u{19C}".."\u{19D}" | "\u{19F}".."\u{1A0}" | "\u{1A2}" | "\u{1A4}" | "\u{1A6}".."\u{1A7}" | "\u{1A9}" | "\u{1AC}" | "\u{1AE}".."\u{1AF}" | "\u{1B1}".."\u{1B3}" | "\u{1B5}" | "\u{1B7}".."\u{1B8}" | "\u{1BC}" | "\u{1C4}" | "\u{1C7}" | "\u{1CA}" | "\u{1CD}" | "\u{1CF}" | "\u{1D1}" | "\u{1D3}" | "\u{1D5}" | "\u{1D7}" | "\u{1D9}" | "\u{1DB}" | "\u{1DE}" | "\u{1E0}" | "\u{1E2}" | "\u{1E4}" | "\u{1E6}" | "\u{1E8}" | "\u{1EA}" | "\u{1EC}" | "\u{1EE}" | "\u{1F1}" | "\u{1F4}" | "\u{1F6}".."\u{1F8}" | "\u{1FA}" | "\u{1FC}" | "\u{1FE}" | "\u{200}" | "\u{202}" | "\u{204}" | "\u{206}" | "\u{208}" | "\u{20A}" | "\u{20C}" | "\u{20E}" | "\u{210}" | "\u{212}" | "\u{214}" | "\u{216}" | "\u{218}" | "\u{21A}" | "\u{21C}" | "\u{21E}" | "\u{220}" | "\u{222}" | "\u{224}" | "\u{226}" | "\u{228}" | "\u{22A}" | "\u{22C}" | "\u{22E}" | "\u{230}" | "\u{232}" | "\u{23A}".."\u{23B}" | "\u{23D}".."\u{23E}" | "\u{241}" | "\u{243}".."\u{246}" | "\u{248}" | "\u{24A}" | "\u{24C}" | "\u{24E}" | "\u{370}" | "\u{372}" | "\u{376}" | "\u{37F}" | "\u{386}" | "\u{388}".."\u{38A}" | "\u{38C}" | "\u{38E}".."\u{38F}" | "\u{391}".."\u{3A1}" | "\u{3A3}".."\u{3AB}" | "\u{3CF}" | "\u{3D2}".."\u{3D4}" | "\u{3D8}" | "\u{3DA}" | "\u{3DC}" | "\u{3DE}" | "\u{3E0}" | "\u{3E2}" | "\u{3E4}" | "\u{3E6}" | "\u{3E8}" | "\u{3EA}" | "\u{3EC}" | "\u{3EE}" | "\u{3F4}" | "\u{3F7}" | "\u{3F9}".."\u{3FA}" | "\u{3FD}".."\u{42F}" | "\u{460}" | "\u{462}" | "\u{464}" | "\u{466}" | "\u{468}" | "\u{46A}" | "\u{46C}" | "\u{46E}" | "\u{470}" | "\u{472}" | "\u{474}" | "\u{476}" | "\u{478}" | "\u{47A}" | "\u{47C}" | "\u{47E}" | "\u{480}" | "\u{48A}" | "\u{48C}" | "\u{48E}" | "\u{490}" | "\u{492}" | "\u{494}" | "\u{496}" | "\u{498}" | "\u{49A}" | "\u{49C}" | "\u{49E}" | "\u{4A0}" | "\u{4A2}" | "\u{4A4}" | "\u{4A6}" | "\u{4A8}" | "\u{4AA}" | "\u{4AC}" | "\u{4AE}" | "\u{4B0}" | "\u{4B2}" | "\u{4B4}" | "\u{4B6}" | "\u{4B8}" | "\u{4BA}" | "\u{4BC}" | "\u{4BE}" | "\u{4C0}".."\u{4C1}" | "\u{4C3}" | "\u{4C5}" | "\u{4C7}" | "\u{4C9}" | "\u{4CB}" | "\u{4CD}" | "\u{4D0}" | "\u{4D2}" | "\u{4D4}" | "\u{4D6}" | "\u{4D8}" | "\u{4DA}" | "\u{4DC}" | "\u{4DE}" | "\u{4E0}" | "\u{4E2}" | "\u{4E4}" | "\u{4E6}" | "\u{4E8}" | "\u{4EA}" | "\u{4EC}" | "\u{4EE}" | "\u{4F0}" | "\u{4F2}" | "\u{4F4}" | "\u{4F6}" | "\u{4F8}" | "\u{4FA}" | "\u{4FC}" | "\u{4FE}" | "\u{500}" | "\u{502}" | "\u{504}" | "\u{506}" | "\u{508}" | "\u{50A}" | "\u{50C}" | "\u{50E}" | "\u{510}" | "\u{512}" | "\u{514}" | "\u{516}" | "\u{518}" | "\u{51A}" | "\u{51C}" | "\u{51E}" | "\u{520}" | "\u{522}" | "\u{524}" | "\u{526}" | "\u{528}" | "\u{52A}" | "\u{52C}" | "\u{52E}" | "\u{531}".."\u{556}" | "\u{10A0}".."\u{10C5}" | "\u{10C7}" | "\u{10CD}" | "\u{13A0}".."\u{13F5}" | "\u{1C90}".."\u{1CBA}" | "\u{1CBD}".."\u{1CBF}" | "\u{1E00}" | "\u{1E02}" | "\u{1E04}" | "\u{1E06}" | "\u{1E08}" | "\u{1E0A}" | "\u{1E0C}" | "\u{1E0E}" | "\u{1E10}" | "\u{1E12}" | "\u{1E14}" | "\u{1E16}" | "\u{1E18}" | "\u{1E1A}" | "\u{1E1C}" | "\u{1E1E}" | "\u{1E20}" | "\u{1E22}" | "\u{1E24}" | "\u{1E26}" | "\u{1E28}" | "\u{1E2A}" | "\u{1E2C}" | "\u{1E2E}" | "\u{1E30}" | "\u{1E32}" | "\u{1E34}" | "\u{1E36}" | "\u{1E38}" | "\u{1E3A}" | "\u{1E3C}" | "\u{1E3E}" | "\u{1E40}" | "\u{1E42}" | "\u{1E44}" | "\u{1E46}" | "\u{1E48}" | "\u{1E4A}" | "\u{1E4C}" | "\u{1E4E}" | "\u{1E50}" | "\u{1E52}" | "\u{1E54}" | "\u{1E56}" | "\u{1E58}" | "\u{1E5A}" | "\u{1E5C}" | "\u{1E5E}" | "\u{1E60}" | "\u{1E62}" | "\u{1E64}" | "\u{1E66}" | "\u{1E68}" | "\u{1E6A}" | "\u{1E6C}" | "\u{1E6E}" | "\u{1E70}" | "\u{1E72}" | "\u{1E74}" | "\u{1E76}" | "\u{1E78}" | "\u{1E7A}" | "\u{1E7C}" | "\u{1E7E}" | "\u{1E80}" | "\u{1E82}" | "\u{1E84}" | "\u{1E86}" | "\u{1E88}" | "\u{1E8A}" | "\u{1E8C}" | "\u{1E8E}" | "\u{1E90}" | "\u{1E92}" | "\u{1E94}" | "\u{1E9E}" | "\u{1EA0}" | "\u{1EA2}" | "\u{1EA4}" | "\u{1EA6}" | "\u{1EA8}" | "\u{1EAA}" | "\u{1EAC}" | "\u{1EAE}" | "\u{1EB0}" | "\u{1EB2}" | "\u{1EB4}" | "\u{1EB6}" | "\u{1EB8}" | "\u{1EBA}" | "\u{1EBC}" | "\u{1EBE}" | "\u{1EC0}" | "\u{1EC2}" | "\u{1EC4}" | "\u{1EC6}" | "\u{1EC8}" | "\u{1ECA}" | "\u{1ECC}" | "\u{1ECE}" | "\u{1ED0}" | "\u{1ED2}" | "\u{1ED4}" | "\u{1ED6}" | "\u{1ED8}" | "\u{1EDA}" | "\u{1EDC}" | "\u{1EDE}" | "\u{1EE0}" | "\u{1EE2}" | "\u{1EE4}" | "\u{1EE6}" | "\u{1EE8}" | "\u{1EEA}" | "\u{1EEC}" | "\u{1EEE}" | "\u{1EF0}" | "\u{1EF2}" | "\u{1EF4}" | "\u{1EF6}" | "\u{1EF8}" | "\u{1EFA}" | "\u{1EFC}" | "\u{1EFE}" | "\u{1F08}".."\u{1F0F}" | "\u{1F18}".."\u{1F1D}" | "\u{1F28}".."\u{1F2F}" | "\u{1F38}".."\u{1F3F}" | "\u{1F48}".."\u{1F4D}" | "\u{1F59}" | "\u{1F5B}" | "\u{1F5D}" | "\u{1F5F}" | "\u{1F68}".."\u{1F6F}" | "\u{1FB8}".."\u{1FBB}" | "\u{1FC8}".."\u{1FCB}" | "\u{1FD8}".."\u{1FDB}" | "\u{1FE8}".."\u{1FEC}" | "\u{1FF8}".."\u{1FFB}" | "\u{2102}" | "\u{2107}" | "\u{210B}".."\u{210D}" | "\u{2110}".."\u{2112}" | "\u{2115}" | "\u{2119}".."\u{211D}" | "\u{2124}" | "\u{2126}" | "\u{2128}" | "\u{212A}".."\u{212D}" | "\u{2130}".."\u{2133}" | "\u{213E}".."\u{213F}" | "\u{2145}" | "\u{2183}" | "\u{2C00}".."\u{2C2E}" | "\u{2C60}" | "\u{2C62}".."\u{2C64}" | "\u{2C67}" | "\u{2C69}" | "\u{2C6B}" | "\u{2C6D}".."\u{2C70}" | "\u{2C72}" | "\u{2C75}" | "\u{2C7E}".."\u{2C80}" | "\u{2C82}" | "\u{2C84}" | "\u{2C86}" | "\u{2C88}" | "\u{2C8A}" | "\u{2C8C}" | "\u{2C8E}" | "\u{2C90}" | "\u{2C92}" | "\u{2C94}" | "\u{2C96}" | "\u{2C98}" | "\u{2C9A}" | "\u{2C9C}" | "\u{2C9E}" | "\u{2CA0}" | "\u{2CA2}" | "\u{2CA4}" | "\u{2CA6}" | "\u{2CA8}" | "\u{2CAA}" | "\u{2CAC}" | "\u{2CAE}" | "\u{2CB0}" | "\u{2CB2}" | "\u{2CB4}" | "\u{2CB6}" | "\u{2CB8}" | "\u{2CBA}" | "\u{2CBC}" | "\u{2CBE}" | "\u{2CC0}" | "\u{2CC2}" | "\u{2CC4}" | "\u{2CC6}" | "\u{2CC8}" | "\u{2CCA}" | "\u{2CCC}" | "\u{2CCE}" | "\u{2CD0}" | "\u{2CD2}" | "\u{2CD4}" | "\u{2CD6}" | "\u{2CD8}" | "\u{2CDA}" | "\u{2CDC}" | "\u{2CDE}" | "\u{2CE0}" | "\u{2CE2}" | "\u{2CEB}" | "\u{2CED}" | "\u{2CF2}" | "\u{A640}" | "\u{A642}" | "\u{A644}" | "\u{A646}" | "\u{A648}" | "\u{A64A}" | "\u{A64C}" | "\u{A64E}" | "\u{A650}" | "\u{A652}" | "\u{A654}" | "\u{A656}" | "\u{A658}" | "\u{A65A}" | "\u{A65C}" | "\u{A65E}" | "\u{A660}" | "\u{A662}" | "\u{A664}" | "\u{A666}" | "\u{A668}" | "\u{A66A}" | "\u{A66C}" | "\u{A680}" | "\u{A682}" | "\u{A684}" | "\u{A686}" | "\u{A688}" | "\u{A68A}" | "\u{A68C}" | "\u{A68E}" | "\u{A690}" | "\u{A692}" | "\u{A694}" | "\u{A696}" | "\u{A698}" | "\u{A69A}" | "\u{A722}" | "\u{A724}" | "\u{A726}" | "\u{A728}" | "\u{A72A}" | "\u{A72C}" | "\u{A72E}" | "\u{A732}" | "\u{A734}" | "\u{A736}" | "\u{A738}" | "\u{A73A}" | "\u{A73C}" | "\u{A73E}" | "\u{A740}" | "\u{A742}" | "\u{A744}" | "\u{A746}" | "\u{A748}" | "\u{A74A}" | "\u{A74C}" | "\u{A74E}" | "\u{A750}" | "\u{A752}" | "\u{A754}" | "\u{A756}" | "\u{A758}" | "\u{A75A}" | "\u{A75C}" | "\u{A75E}" | "\u{A760}" | "\u{A762}" | "\u{A764}" | "\u{A766}" | "\u{A768}" | "\u{A76A}" | "\u{A76C}" | "\u{A76E}" | "\u{A779}" | "\u{A77B}" | "\u{A77D}".."\u{A77E}" | "\u{A780}" | "\u{A782}" | "\u{A784}" | "\u{A786}" | "\u{A78B}" | "\u{A78D}" | "\u{A790}" | "\u{A792}" | "\u{A796}" | "\u{A798}" | "\u{A79A}" | "\u{A79C}" | "\u{A79E}" | "\u{A7A0}" | "\u{A7A2}" | "\u{A7A4}" | "\u{A7A6}" | "\u{A7A8}" | "\u{A7AA}".."\u{A7AE}" | "\u{A7B0}".."\u{A7B4}" | "\u{A7B6}" | "\u{A7B8}" | "\u{FF21}".."\u{FF3A}" | "\u{10400}".."\u{10427}" | "\u{104B0}".."\u{104D3}" | "\u{10C80}".."\u{10CB2}" | "\u{118A0}".."\u{118BF}" | "\u{16E40}".."\u{16E5F}" | "\u{1D400}".."\u{1D419}" | "\u{1D434}".."\u{1D44D}" | "\u{1D468}".."\u{1D481}" | "\u{1D49C}" | "\u{1D49E}".."\u{1D49F}" | "\u{1D4A2}" | "\u{1D4A5}".."\u{1D4A6}" | "\u{1D4A9}".."\u{1D4AC}" | "\u{1D4AE}".."\u{1D4B5}" | "\u{1D4D0}".."\u{1D4E9}" | "\u{1D504}".."\u{1D505}" | "\u{1D507}".."\u{1D50A}" | "\u{1D50D}".."\u{1D514}" | "\u{1D516}".."\u{1D51C}" | "\u{1D538}".."\u{1D539}" | "\u{1D53B}".."\u{1D53E}" | "\u{1D540}".."\u{1D544}" | "\u{1D546}" | "\u{1D54A}".."\u{1D550}" | "\u{1D56C}".."\u{1D585}" | "\u{1D5A0}".."\u{1D5B9}" | "\u{1D5D4}".."\u{1D5ED}" | "\u{1D608}".."\u{1D621}" | "\u{1D63C}".."\u{1D655}" | "\u{1D670}".."\u{1D689}" | "\u{1D6A8}".."\u{1D6C0}" | "\u{1D6E2}".."\u{1D6FA}" | "\u{1D71C}".."\u{1D734}" | "\u{1D756}".."\u{1D76E}" | "\u{1D790}".."\u{1D7A8}" | "\u{1D7CA}" | "\u{1E900}".."\u{1E921}"
  unicode_lower <- "\u{61}".."\u{7A}" | "\u{B5}" | "\u{DF}".."\u{F6}" | "\u{F8}".."\u{FF}" | "\u{101}" | "\u{103}" | "\u{105}" | "\u{107}" | "\u{109}" | "\u{10B}" | "\u{10D}" | "\u{10F}" | "\u{111}" | "\u{113}" | "\u{115}" | "\u{117}" | "\u{119}" | "\u{11B}" | "\u{11D}" | "\u{11F}" | "\u{121}" | "\u{123}" | "\u{125}" | "\u{127}" | "\u{129}" | "\u{12B}" | "\u{12D}" | "\u{12F}" | "\u{131}" | "\u{133}" | "\u{135}" | "\u{137}".."\u{138}" | "\u{13A}" | "\u{13C}" | "\u{13E}" | "\u{140}" | "\u{142}" | "\u{144}" | "\u{146}" | "\u{148}".."\u{149}" | "\u{14B}" | "\u{14D}" | "\u{14F}" | "\u{151}" | "\u{153}" | "\u{155}" | "\u{157}" | "\u{159}" | "\u{15B}" | "\u{15D}" | "\u{15F}" | "\u{161}" | "\u{163}" | "\u{165}" | "\u{167}" | "\u{169}" | "\u{16B}" | "\u{16D}" | "\u{16F}" | "\u{171}" | "\u{173}" | "\u{175}" | "\u{177}" | "\u{17A}" | "\u{17C}" | "\u{17E}".."\u{180}" | "\u{183}" | "\u{185}" | "\u{188}" | "\u{18C}".."\u{18D}" | "\u{192}" | "\u{195}" | "\u{199}".."\u{19B}" | "\u{19E}" | "\u{1A1}" | "\u{1A3}" | "\u{1A5}" | "\u{1A8}" | "\u{1AA}".."\u{1AB}" | "\u{1AD}" | "\u{1B0}" | "\u{1B4}" | "\u{1B6}" | "\u{1B9}".."\u{1BA}" | "\u{1BD}".."\u{1BF}" | "\u{1C6}" | "\u{1C9}" | "\u{1CC}" | "\u{1CE}" | "\u{1D0}" | "\u{1D2}" | "\u{1D4}" | "\u{1D6}" | "\u{1D8}" | "\u{1DA}" | "\u{1DC}".."\u{1DD}" | "\u{1DF}" | "\u{1E1}" | "\u{1E3}" | "\u{1E5}" | "\u{1E7}" | "\u{1E9}" | "\u{1EB}" | "\u{1ED}" | "\u{1EF}".."\u{1F0}" | "\u{1F3}" | "\u{1F5}" | "\u{1F9}" | "\u{1FB}" | "\u{1FD}" | "\u{1FF}" | "\u{201}" | "\u{203}" | "\u{205}" | "\u{207}" | "\u{209}" | "\u{20B}" | "\u{20D}" | "\u{20F}" | "\u{211}" | "\u{213}" | "\u{215}" | "\u{217}" | "\u{219}" | "\u{21B}" | "\u{21D}" | "\u{21F}" | "\u{221}" | "\u{223}" | "\u{225}" | "\u{227}" | "\u{229}" | "\u{22B}" | "\u{22D}" | "\u{22F}" | "\u{231}" | "\u{233}".."\u{239}" | "\u{23C}" | "\u{23F}".."\u{240}" | "\u{242}" | "\u{247}" | "\u{249}" | "\u{24B}" | "\u{24D}" | "\u{24F}".."\u{293}" | "\u{295}".."\u{2AF}" | "\u{371}" | "\u{373}" | "\u{377}" | "\u{37B}".."\u{37D}" | "\u{390}" | "\u{3AC}".."\u{3CE}" | "\u{3D0}".."\u{3D1}" | "\u{3D5}".."\u{3D7}" | "\u{3D9}" | "\u{3DB}" | "\u{3DD}" | "\u{3DF}" | "\u{3E1}" | "\u{3E3}" | "\u{3E5}" | "\u{3E7}" | "\u{3E9}" | "\u{3EB}" | "\u{3ED}" | "\u{3EF}".."\u{3F3}" | "\u{3F5}" | "\u{3F8}" | "\u{3FB}".."\u{3FC}" | "\u{430}".."\u{45F}" | "\u{461}" | "\u{463}" | "\u{465}" | "\u{467}" | "\u{469}" | "\u{46B}" | "\u{46D}" | "\u{46F}" | "\u{471}" | "\u{473}" | "\u{475}" | "\u{477}" | "\u{479}" | "\u{47B}" | "\u{47D}" | "\u{47F}" | "\u{481}" | "\u{48B}" | "\u{48D}" | "\u{48F}" | "\u{491}" | "\u{493}" | "\u{495}" | "\u{497}" | "\u{499}" | "\u{49B}" | "\u{49D}" | "\u{49F}" | "\u{4A1}" | "\u{4A3}" | "\u{4A5}" | "\u{4A7}" | "\u{4A9}" | "\u{4AB}" | "\u{4AD}" | "\u{4AF}" | "\u{4B1}" | "\u{4B3}" | "\u{4B5}" | "\u{4B7}" | "\u{4B9}" | "\u{4BB}" | "\u{4BD}" | "\u{4BF}" | "\u{4C2}" | "\u{4C4}" | "\u{4C6}" | "\u{4C8}" | "\u{4CA}" | "\u{4CC}" | "\u{4CE}".."\u{4CF}" | "\u{4D1}" | "\u{4D3}" | "\u{4D5}" | "\u{4D7}" | "\u{4D9}" | "\u{4DB}" | "\u{4DD}" | "\u{4DF}" | "\u{4E1}" | "\u{4E3}" | "\u{4E5}" | "\u{4E7}" | "\u{4E9}" | "\u{4EB}" | "\u{4ED}" | "\u{4EF}" | "\u{4F1}" | "\u{4F3}" | "\u{4F5}" | "\u{4F7}" | "\u{4F9}" | "\u{4FB}" | "\u{4FD}" | "\u{4FF}" | "\u{501}" | "\u{503}" | "\u{505}" | "\u{507}" | "\u{509}" | "\u{50B}" | "\u{50D}" | "\u{50F}" | "\u{511}" | "\u{513}" | "\u{515}" | "\u{517}" | "\u{519}" | "\u{51B}" | "\u{51D}" | "\u{51F}" | "\u{521}" | "\u{523}" | "\u{525}" | "\u{527}" | "\u{529}" | "\u{52B}" | "\u{52D}" | "\u{52F}" | "\u{560}".."\u{588}" | "\u{10D0}".."\u{10FA}" | "\u{10FD}".."\u{10FF}" | "\u{13F8}".."\u{13FD}" | "\u{1C80}".."\u{1C88}" | "\u{1D00}".."\u{1D2B}" | "\u{1D6B}".."\u{1D77}" | "\u{1D79}".."\u{1D9A}" | "\u{1E01}" | "\u{1E03}" | "\u{1E05}" | "\u{1E07}" | "\u{1E09}" | "\u{1E0B}" | "\u{1E0D}" | "\u{1E0F}" | "\u{1E11}" | "\u{1E13}" | "\u{1E15}" | "\u{1E17}" | "\u{1E19}" | "\u{1E1B}" | "\u{1E1D}" | "\u{1E1F}" | "\u{1E21}" | "\u{1E23}" | "\u{1E25}" | "\u{1E27}" | "\u{1E29}" | "\u{1E2B}" | "\u{1E2D}" | "\u{1E2F}" | "\u{1E31}" | "\u{1E33}" | "\u{1E35}" | "\u{1E37}" | "\u{1E39}" | "\u{1E3B}" | "\u{1E3D}" | "\u{1E3F}" | "\u{1E41}" | "\u{1E43}" | "\u{1E45}" | "\u{1E47}" | "\u{1E49}" | "\u{1E4B}" | "\u{1E4D}" | "\u{1E4F}" | "\u{1E51}" | "\u{1E53}" | "\u{1E55}" | "\u{1E57}" | "\u{1E59}" | "\u{1E5B}" | "\u{1E5D}" | "\u{1E5F}" | "\u{1E61}" | "\u{1E63}" | "\u{1E65}" | "\u{1E67}" | "\u{1E69}" | "\u{1E6B}" | "\u{1E6D}" | "\u{1E6F}" | "\u{1E71}" | "\u{1E73}" | "\u{1E75}" | "\u{1E77}" | "\u{1E79}" | "\u{1E7B}" | "\u{1E7D}" | "\u{1E7F}" | "\u{1E81}" | "\u{1E83}" | "\u{1E85}" | "\u{1E87}" | "\u{1E89}" | "\u{1E8B}" | "\u{1E8D}" | "\u{1E8F}" | "\u{1E91}" | "\u{1E93}" | "\u{1E95}".."\u{1E9D}" | "\u{1E9F}" | "\u{1EA1}" | "\u{1EA3}" | "\u{1EA5}" | "\u{1EA7}" | "\u{1EA9}" | "\u{1EAB}" | "\u{1EAD}" | "\u{1EAF}" | "\u{1EB1}" | "\u{1EB3}" | "\u{1EB5}" | "\u{1EB7}" | "\u{1EB9}" | "\u{1EBB}" | "\u{1EBD}" | "\u{1EBF}" | "\u{1EC1}" | "\u{1EC3}" | "\u{1EC5}" | "\u{1EC7}" | "\u{1EC9}" | "\u{1ECB}" | "\u{1ECD}" | "\u{1ECF}" | "\u{1ED1}" | "\u{1ED3}" | "\u{1ED5}" | "\u{1ED7}" | "\u{1ED9}" | "\u{1EDB}" | "\u{1EDD}" | "\u{1EDF}" | "\u{1EE1}" | "\u{1EE3}" | "\u{1EE5}" | "\u{1EE7}" | "\u{1EE9}" | "\u{1EEB}" | "\u{1EED}" | "\u{1EEF}" | "\u{1EF1}" | "\u{1EF3}" | "\u{1EF5}" | "\u{1EF7}" | "\u{1EF9}" | "\u{1EFB}" | "\u{1EFD}" | "\u{1EFF}".."\u{1F07}" | "\u{1F10}".."\u{1F15}" | "\u{1F20}".."\u{1F27}" | "\u{1F30}".."\u{1F37}" | "\u{1F40}".."\u{1F45}" | "\u{1F50}".."\u{1F57}" | "\u{1F60}".."\u{1F67}" | "\u{1F70}".."\u{1F7D}" | "\u{1F80}".."\u{1F87}" | "\u{1F90}".."\u{1F97}" | "\u{1FA0}".."\u{1FA7}" | "\u{1FB0}".."\u{1FB4}" | "\u{1FB6}".."\u{1FB7}" | "\u{1FBE}" | "\u{1FC2}".."\u{1FC4}" | "\u{1FC6}".."\u{1FC7}" | "\u{1FD0}".."\u{1FD3}" | "\u{1FD6}".."\u{1FD7}" | "\u{1FE0}".."\u{1FE7}" | "\u{1FF2}".."\u{1FF4}" | "\u{1FF6}".."\u{1FF7}" | "\u{210A}" | "\u{210E}".."\u{210F}" | "\u{2113}" | "\u{212F}" | "\u{2134}" | "\u{2139}" | "\u{213C}".."\u{213D}" | "\u{2146}".."\u{2149}" | "\u{214E}" | "\u{2184}" | "\u{2C30}".."\u{2C5E}" | "\u{2C61}" | "\u{2C65}".."\u{2C66}" | "\u{2C68}" | "\u{2C6A}" | "\u{2C6C}" | "\u{2C71}" | "\u{2C73}".."\u{2C74}" | "\u{2C76}".."\u{2C7B}" | "\u{2C81}" | "\u{2C83}" | "\u{2C85}" | "\u{2C87}" | "\u{2C89}" | "\u{2C8B}" | "\u{2C8D}" | "\u{2C8F}" | "\u{2C91}" | "\u{2C93}" | "\u{2C95}" | "\u{2C97}" | "\u{2C99}" | "\u{2C9B}" | "\u{2C9D}" | "\u{2C9F}" | "\u{2CA1}" | "\u{2CA3}" | "\u{2CA5}" | "\u{2CA7}" | "\u{2CA9}" | "\u{2CAB}" | "\u{2CAD}" | "\u{2CAF}" | "\u{2CB1}" | "\u{2CB3}" | "\u{2CB5}" | "\u{2CB7}" | "\u{2CB9}" | "\u{2CBB}" | "\u{2CBD}" | "\u{2CBF}" | "\u{2CC1}" | "\u{2CC3}" | "\u{2CC5}" | "\u{2CC7}" | "\u{2CC9}" | "\u{2CCB}" | "\u{2CCD}" | "\u{2CCF}" | "\u{2CD1}" | "\u{2CD3}" | "\u{2CD5}" | "\u{2CD7}" | "\u{2CD9}" | "\u{2CDB}" | "\u{2CDD}" | "\u{2CDF}" | "\u{2CE1}" | "\u{2CE3}".."\u{2CE4}" | "\u{2CEC}" | "\u{2CEE}" | "\u{2CF3}" | "\u{2D00}".."\u{2D25}" | "\u{2D27}" | "\u{2D2D}" | "\u{A641}" | "\u{A643}" | "\u{A645}" | "\u{A647}" | "\u{A649}" | "\u{A64B}" | "\u{A64D}" | "\u{A64F}" | "\u{A651}" | "\u{A653}" | "\u{A655}" | "\u{A657}" | "\u{A659}" | "\u{A65B}" | "\u{A65D}" | "\u{A65F}" | "\u{A661}" | "\u{A663}" | "\u{A665}" | "\u{A667}" | "\u{A669}" | "\u{A66B}" | "\u{A66D}" | "\u{A681}" | "\u{A683}" | "\u{A685}" | "\u{A687}" | "\u{A689}" | "\u{A68B}" | "\u{A68D}" | "\u{A68F}" | "\u{A691}" | "\u{A693}" | "\u{A695}" | "\u{A697}" | "\u{A699}" | "\u{A69B}" | "\u{A723}" | "\u{A725}" | "\u{A727}" | "\u{A729}" | "\u{A72B}" | "\u{A72D}" | "\u{A72F}".."\u{A731}" | "\u{A733}" | "\u{A735}" | "\u{A737}" | "\u{A739}" | "\u{A73B}" | "\u{A73D}" | "\u{A73F}" | "\u{A741}" | "\u{A743}" | "\u{A745}" | "\u{A747}" | "\u{A749}" | "\u{A74B}" | "\u{A74D}" | "\u{A74F}" | "\u{A751}" | "\u{A753}" | "\u{A755}" | "\u{A757}" | "\u{A759}" | "\u{A75B}" | "\u{A75D}" | "\u{A75F}" | "\u{A761}" | "\u{A763}" | "\u{A765}" | "\u{A767}" | "\u{A769}" | "\u{A76B}" | "\u{A76D}" | "\u{A76F}" | "\u{A771}".."\u{A778}" | "\u{A77A}" | "\u{A77C}" | "\u{A77F}" | "\u{A781}" | "\u{A783}" | "\u{A785}" | "\u{A787}" | "\u{A78C}" | "\u{A78E}" | "\u{A791}" | "\u{A793}".."\u{A795}" | "\u{A797}" | "\u{A799}" | "\u{A79B}" | "\u{A79D}" | "\u{A79F}" | "\u{A7A1}" | "\u{A7A3}" | "\u{A7A5}" | "\u{A7A7}" | "\u{A7A9}" | "\u{A7AF}" | "\u{A7B5}" | "\u{A7B7}" | "\u{A7B9}" | "\u{A7FA}" | "\u{AB30}".."\u{AB5A}" | "\u{AB60}".."\u{AB65}" | "\u{AB70}".."\u{ABBF}" | "\u{FB00}".."\u{FB06}" | "\u{FB13}".."\u{FB17}" | "\u{FF41}".."\u{FF5A}" | "\u{10428}".."\u{1044F}" | "\u{104D8}".."\u{104FB}" | "\u{10CC0}".."\u{10CF2}" | "\u{118C0}".."\u{118DF}" | "\u{16E60}".."\u{16E7F}" | "\u{1D41A}".."\u{1D433}" | "\u{1D44E}".."\u{1D454}" | "\u{1D456}".."\u{1D467}" | "\u{1D482}".."\u{1D49B}" | "\u{1D4B6}".."\u{1D4B9}" | "\u{1D4BB}" | "\u{1D4BD}".."\u{1D4C3}" | "\u{1D4C5}".."\u{1D4CF}" | "\u{1D4EA}".."\u{1D503}" | "\u{1D51E}".."\u{1D537}" | "\u{1D552}".."\u{1D56B}" | "\u{1D586}".."\u{1D59F}" | "\u{1D5BA}".."\u{1D5D3}" | "\u{1D5EE}".."\u{1D607}" | "\u{1D622}".."\u{1D63B}" | "\u{1D656}".."\u{1D66F}" | "\u{1D68A}".."\u{1D6A5}" | "\u{1D6C2}".."\u{1D6DA}" | "\u{1D6DC}".."\u{1D6E1}" | "\u{1D6FC}".."\u{1D714}" | "\u{1D716}".."\u{1D71B}" | "\u{1D736}".."\u{1D74E}" | "\u{1D750}".."\u{1D755}" | "\u{1D770}".."\u{1D788}" | "\u{1D78A}".."\u{1D78F}" | "\u{1D7AA}".."\u{1D7C2}" | "\u{1D7C4}".."\u{1D7C9}" | "\u{1D7CB}" | "\u{1E922}".."\u{1E943}"
  unicode_titlecase <- "\u{1C5}" | "\u{1C8}" | "\u{1CB}" | "\u{1F2}" | "\u{1F88}".."\u{1F8F}" | "\u{1F98}".."\u{1F9F}" | "\u{1FA8}".."\u{1FAF}" | "\u{1FBC}" | "\u{1FCC}" | "\u{1FFC}"
  unicode_modifier <- "\u{2B0}".."\u{2C1}" | "\u{2C6}".."\u{2D1}" | "\u{2E0}".."\u{2E4}" | "\u{2EC}" | "\u{2EE}" | "\u{374}" | "\u{37A}" | "\u{559}" | "\u{640}" | "\u{6E5}".."\u{6E6}" | "\u{7F4}".."\u{7F5}" | "\u{7FA}" | "\u{81A}" | "\u{824}" | "\u{828}" | "\u{971}" | "\u{E46}" | "\u{EC6}" | "\u{10FC}" | "\u{17D7}" | "\u{1843}" | "\u{1AA7}" | "\u{1C78}".."\u{1C7D}" | "\u{1D2C}".."\u{1D6A}" | "\u{1D78}" | "\u{1D9B}".."\u{1DBF}" | "\u{2071}" | "\u{207F}" | "\u{2090}".."\u{209C}" | "\u{2C7C}".."\u{2C7D}" | "\u{2D6F}" | "\u{2E2F}" | "\u{3005}" | "\u{3031}".."\u{3035}" | "\u{303B}" | "\u{309D}".."\u{309E}" | "\u{30FC}".."\u{30FE}" | "\u{A015}" | "\u{A4F8}".."\u{A4FD}" | "\u{A60C}" | "\u{A67F}" | "\u{A69C}".."\u{A69D}" | "\u{A717}".."\u{A71F}" | "\u{A770}" | "\u{A788}" | "\u{A7F8}".."\u{A7F9}" | "\u{A9CF}" | "\u{A9E6}" | "\u{AA70}" | "\u{AADD}" | "\u{AAF3}".."\u{AAF4}" | "\u{AB5C}".."\u{AB5F}" | "\u{FF70}" | "\u{FF9E}".."\u{FF9F}" | "\u{16B40}".."\u{16B43}" | "\u{16F93}".."\u{16F9F}" | "\u{16FE0}".."\u{16FE1}"
  unicode_other_letter <- "\u{AA}" | "\u{BA}" | "\u{1BB}" | "\u{1C0}".."\u{1C3}" | "\u{294}" | "\u{5D0}".."\u{5EA}" | "\u{5EF}".."\u{5F2}" | "\u{620}".."\u{63F}" | "\u{641}".."\u{64A}" | "\u{66E}".."\u{66F}" | "\u{671}".."\u{6D3}" | "\u{6D5}" | "\u{6EE}".."\u{6EF}" | "\u{6FA}".."\u{6FC}" | "\u{6FF}" | "\u{710}" | "\u{712}".."\u{72F}" | "\u{74D}".."\u{7A5}" | "\u{7B1}" | "\u{7CA}".."\u{7EA}" | "\u{800}".."\u{815}" | "\u{840}".."\u{858}" | "\u{860}".."\u{86A}" | "\u{8A0}".."\u{8B4}" | "\u{8B6}".."\u{8BD}" | "\u{904}".."\u{939}" | "\u{93D}" | "\u{950}" | "\u{958}".."\u{961}" | "\u{972}".."\u{980}" | "\u{985}".."\u{98C}" | "\u{98F}".."\u{990}" | "\u{993}".."\u{9A8}" | "\u{9AA}".."\u{9B0}" | "\u{9B2}" | "\u{9B6}".."\u{9B9}" | "\u{9BD}" | "\u{9CE}" | "\u{9DC}".."\u{9DD}" | "\u{9DF}".."\u{9E1}" | "\u{9F0}".."\u{9F1}" | "\u{9FC}" | "\u{A05}".."\u{A0A}" | "\u{A0F}".."\u{A10}" | "\u{A13}".."\u{A28}" | "\u{A2A}".."\u{A30}" | "\u{A32}".."\u{A33}" | "\u{A35}".."\u{A36}" | "\u{A38}".."\u{A39}" | "\u{A59}".."\u{A5C}" | "\u{A5E}" | "\u{A72}".."\u{A74}" | "\u{A85}".."\u{A8D}" | "\u{A8F}".."\u{A91}" | "\u{A93}".."\u{AA8}" | "\u{AAA}".."\u{AB0}" | "\u{AB2}".."\u{AB3}" | "\u{AB5}".."\u{AB9}" | "\u{ABD}" | "\u{AD0}" | "\u{AE0}".."\u{AE1}" | "\u{AF9}" | "\u{B05}".."\u{B0C}" | "\u{B0F}".."\u{B10}" | "\u{B13}".."\u{B28}" | "\u{B2A}".."\u{B30}" | "\u{B32}".."\u{B33}" | "\u{B35}".."\u{B39}" | "\u{B3D}" | "\u{B5C}".."\u{B5D}" | "\u{B5F}".."\u{B61}" | "\u{B71}" | "\u{B83}" | "\u{B85}".."\u{B8A}" | "\u{B8E}".."\u{B90}" | "\u{B92}".."\u{B95}" | "\u{B99}".."\u{B9A}" | "\u{B9C}" | "\u{B9E}".."\u{B9F}" | "\u{BA3}".."\u{BA4}" | "\u{BA8}".."\u{BAA}" | "\u{BAE}".."\u{BB9}" | "\u{BD0}" | "\u{C05}".."\u{C0C}" | "\u{C0E}".."\u{C10}" | "\u{C12}".."\u{C28}" | "\u{C2A}".."\u{C39}" | "\u{C3D}" | "\u{C58}".."\u{C5A}" | "\u{C60}".."\u{C61}" | "\u{C80}" | "\u{C85}".."\u{C8C}" | "\u{C8E}".."\u{C90}" | "\u{C92}".."\u{CA8}" | "\u{CAA}".."\u{CB3}" | "\u{CB5}".."\u{CB9}" | "\u{CBD}" | "\u{CDE}" | "\u{CE0}".."\u{CE1}" | "\u{CF1}".."\u{CF2}" | "\u{D05}".."\u{D0C}" | "\u{D0E}".."\u{D10}" | "\u{D12}".."\u{D3A}" | "\u{D3D}" | "\u{D4E}" | "\u{D54}".."\u{D56}" | "\u{D5F}".."\u{D61}" | "\u{D7A}".."\u{D7F}" | "\u{D85}".."\u{D96}" | "\u{D9A}".."\u{DB1}" | "\u{DB3}".."\u{DBB}" | "\u{DBD}" | "\u{DC0}".."\u{DC6}" | "\u{E01}".."\u{E30}" | "\u{E32}".."\u{E33}" | "\u{E40}".."\u{E45}" | "\u{E81}".."\u{E82}" | "\u{E84}" | "\u{E87}".."\u{E88}" | "\u{E8A}" | "\u{E8D}" | "\u{E94}".."\u{E97}" | "\u{E99}".."\u{E9F}" | "\u{EA1}".."\u{EA3}" | "\u{EA5}" | "\u{EA7}" | "\u{EAA}".."\u{EAB}" | "\u{EAD}".."\u{EB0}" | "\u{EB2}".."\u{EB3}" | "\u{EBD}" | "\u{EC0}".."\u{EC4}" | "\u{EDC}".."\u{EDF}" | "\u{F00}" | "\u{F40}".."\u{F47}" | "\u{F49}".."\u{F6C}" | "\u{F88}".."\u{F8C}" | "\u{1000}".."\u{102A}" | "\u{103F}" | "\u{1050}".."\u{1055}" | "\u{105A}".."\u{105D}" | "\u{1061}" | "\u{1065}".."\u{1066}" | "\u{106E}".."\u{1070}" | "\u{1075}".."\u{1081}" | "\u{108E}" | "\u{1100}".."\u{1248}" | "\u{124A}".."\u{124D}" | "\u{1250}".."\u{1256}" | "\u{1258}" | "\u{125A}".."\u{125D}" | "\u{1260}".."\u{1288}" | "\u{128A}".."\u{128D}" | "\u{1290}".."\u{12B0}" | "\u{12B2}".."\u{12B5}" | "\u{12B8}".."\u{12BE}" | "\u{12C0}" | "\u{12C2}".."\u{12C5}" | "\u{12C8}".."\u{12D6}" | "\u{12D8}".."\u{1310}" | "\u{1312}".."\u{1315}" | "\u{1318}".."\u{135A}" | "\u{1380}".."\u{138F}" | "\u{1401}".."\u{166C}" | "\u{166F}".."\u{167F}" | "\u{1681}".."\u{169A}" | "\u{16A0}".."\u{16EA}" | "\u{16F1}".."\u{16F8}" | "\u{1700}".."\u{170C}" | "\u{170E}".."\u{1711}" | "\u{1720}".."\u{1731}" | "\u{1740}".."\u{1751}" | "\u{1760}".."\u{176C}" | "\u{176E}".."\u{1770}" | "\u{1780}".."\u{17B3}" | "\u{17DC}" | "\u{1820}".."\u{1842}" | "\u{1844}".."\u{1878}" | "\u{1880}".."\u{1884}" | "\u{1887}".."\u{18A8}" | "\u{18AA}" | "\u{18B0}".."\u{18F5}" | "\u{1900}".."\u{191E}" | "\u{1950}".."\u{196D}" | "\u{1970}".."\u{1974}" | "\u{1980}".."\u{19AB}" | "\u{19B0}".."\u{19C9}" | "\u{1A00}".."\u{1A16}" | "\u{1A20}".."\u{1A54}" | "\u{1B05}".."\u{1B33}" | "\u{1B45}".."\u{1B4B}" | "\u{1B83}".."\u{1BA0}" | "\u{1BAE}".."\u{1BAF}" | "\u{1BBA}".."\u{1BE5}" | "\u{1C00}".."\u{1C23}" | "\u{1C4D}".."\u{1C4F}" | "\u{1C5A}".."\u{1C77}" | "\u{1CE9}".."\u{1CEC}" | "\u{1CEE}".."\u{1CF1}" | "\u{1CF5}".."\u{1CF6}" | "\u{2135}".."\u{2138}" | "\u{2D30}".."\u{2D67}" | "\u{2D80}".."\u{2D96}" | "\u{2DA0}".."\u{2DA6}" | "\u{2DA8}".."\u{2DAE}" | "\u{2DB0}".."\u{2DB6}" | "\u{2DB8}".."\u{2DBE}" | "\u{2DC0}".."\u{2DC6}" | "\u{2DC8}".."\u{2DCE}" | "\u{2DD0}".."\u{2DD6}" | "\u{2DD8}".."\u{2DDE}" | "\u{3006}" | "\u{303C}" | "\u{3041}".."\u{3096}" | "\u{309F}" | "\u{30A1}".."\u{30FA}" | "\u{30FF}" | "\u{3105}".."\u{312F}" | "\u{3131}".."\u{318E}" | "\u{31A0}".."\u{31BA}" | "\u{31F0}".."\u{31FF}" | "\u{3400}".."\u{4DB5}" | "\u{4E00}".."\u{9FEF}" | "\u{A000}".."\u{A014}" | "\u{A016}".."\u{A48C}" | "\u{A4D0}".."\u{A4F7}" | "\u{A500}".."\u{A60B}" | "\u{A610}".."\u{A61F}" | "\u{A62A}".."\u{A62B}" | "\u{A66E}" | "\u{A6A0}".."\u{A6E5}" | "\u{A78F}" | "\u{A7F7}" | "\u{A7FB}".."\u{A801}" | "\u{A803}".."\u{A805}" | "\u{A807}".."\u{A80A}" | "\u{A80C}".."\u{A822}" | "\u{A840}".."\u{A873}" | "\u{A882}".."\u{A8B3}" | "\u{A8F2}".."\u{A8F7}" | "\u{A8FB}" | "\u{A8FD}".."\u{A8FE}" | "\u{A90A}".."\u{A925}" | "\u{A930}".."\u{A946}" | "\u{A960}".."\u{A97C}" | "\u{A984}".."\u{A9B2}" | "\u{A9E0}".."\u{A9E4}" | "\u{A9E7}".."\u{A9EF}" | "\u{A9FA}".."\u{A9FE}" | "\u{AA00}".."\u{AA28}" | "\u{AA40}".."\u{AA42}" | "\u{AA44}".."\u{AA4B}" | "\u{AA60}".."\u{AA6F}" | "\u{AA71}".."\u{AA76}" | "\u{AA7A}" | "\u{AA7E}".."\u{AAAF}" | "\u{AAB1}" | "\u{AAB5}".."\u{AAB6}" | "\u{AAB9}".."\u{AABD}" | "\u{AAC0}" | "\u{AAC2}" | "\u{AADB}".."\u{AADC}" | "\u{AAE0}".."\u{AAEA}" | "\u{AAF2}" | "\u{AB01}".."\u{AB06}" | "\u{AB09}".."\u{AB0E}" | "\u{AB11}".."\u{AB16}" | "\u{AB20}".."\u{AB26}" | "\u{AB28}".."\u{AB2E}" | "\u{ABC0}".."\u{ABE2}" | "\u{AC00}".."\u{D7A3}" | "\u{D7B0}".."\u{D7C6}" | "\u{D7CB}".."\u{D7FB}" | "\u{F900}".."\u{FA6D}" | "\u{FA70}".."\u{FAD9}" | "\u{FB1D}" | "\u{FB1F}".."\u{FB28}" | "\u{FB2A}".."\u{FB36}" | "\u{FB38}".."\u{FB3C}" | "\u{FB3E}" | "\u{FB40}".."\u{FB41}" | "\u{FB43}".."\u{FB44}" | "\u{FB46}".."\u{FBB1}" | "\u{FBD3}".."\u{FD3D}" | "\u{FD50}".."\u{FD8F}" | "\u{FD92}".."\u{FDC7}" | "\u{FDF0}".."\u{FDFB}" | "\u{FE70}".."\u{FE74}" | "\u{FE76}".."\u{FEFC}" | "\u{FF66}".."\u{FF6F}" | "\u{FF71}".."\u{FF9D}" | "\u{FFA0}".."\u{FFBE}" | "\u{FFC2}".."\u{FFC7}" | "\u{FFCA}".."\u{FFCF}" | "\u{FFD2}".."\u{FFD7}" | "\u{FFDA}".."\u{FFDC}" | "\u{10000}".."\u{1000B}" | "\u{1000D}".."\u{10026}" | "\u{10028}".."\u{1003A}" | "\u{1003C}".."\u{1003D}" | "\u{1003F}".."\u{1004D}" | "\u{10050}".."\u{1005D}" | "\u{10080}".."\u{100FA}" | "\u{10280}".."\u{1029C}" | "\u{102A0}".."\u{102D0}" | "\u{10300}".."\u{1031F}" | "\u{1032D}".."\u{10340}" | "\u{10342}".."\u{10349}" | "\u{10350}".."\u{10375}" | "\u{10380}".."\u{1039D}" | "\u{103A0}".."\u{103C3}" | "\u{103C8}".."\u{103CF}" | "\u{10450}".."\u{1049D}" | "\u{10500}".."\u{10527}" | "\u{10530}".."\u{10563}" | "\u{10600}".."\u{10736}" | "\u{10740}".."\u{10755}" | "\u{10760}".."\u{10767}" | "\u{10800}".."\u{10805}" | "\u{10808}" | "\u{1080A}".."\u{10835}" | "\u{10837}".."\u{10838}" | "\u{1083C}" | "\u{1083F}".."\u{10855}" | "\u{10860}".."\u{10876}" | "\u{10880}".."\u{1089E}" | "\u{108E0}".."\u{108F2}" | "\u{108F4}".."\u{108F5}" | "\u{10900}".."\u{10915}" | "\u{10920}".."\u{10939}" | "\u{10980}".."\u{109B7}" | "\u{109BE}".."\u{109BF}" | "\u{10A00}" | "\u{10A10}".."\u{10A13}" | "\u{10A15}".."\u{10A17}" | "\u{10A19}".."\u{10A35}" | "\u{10A60}".."\u{10A7C}" | "\u{10A80}".."\u{10A9C}" | "\u{10AC0}".."\u{10AC7}" | "\u{10AC9}".."\u{10AE4}" | "\u{10B00}".."\u{10B35}" | "\u{10B40}".."\u{10B55}" | "\u{10B60}".."\u{10B72}" | "\u{10B80}".."\u{10B91}" | "\u{10C00}".."\u{10C48}" | "\u{10D00}".."\u{10D23}" | "\u{10F00}".."\u{10F1C}" | "\u{10F27}" | "\u{10F30}".."\u{10F45}" | "\u{11003}".."\u{11037}" | "\u{11083}".."\u{110AF}" | "\u{110D0}".."\u{110E8}" | "\u{11103}".."\u{11126}" | "\u{11144}" | "\u{11150}".."\u{11172}" | "\u{11176}" | "\u{11183}".."\u{111B2}" | "\u{111C1}".."\u{111C4}" | "\u{111DA}" | "\u{111DC}" | "\u{11200}".."\u{11211}" | "\u{11213}".."\u{1122B}" | "\u{11280}".."\u{11286}" | "\u{11288}" | "\u{1128A}".."\u{1128D}" | "\u{1128F}".."\u{1129D}" | "\u{1129F}".."\u{112A8}" | "\u{112B0}".."\u{112DE}" | "\u{11305}".."\u{1130C}" | "\u{1130F}".."\u{11310}" | "\u{11313}".."\u{11328}" | "\u{1132A}".."\u{11330}" | "\u{11332}".."\u{11333}" | "\u{11335}".."\u{11339}" | "\u{1133D}" | "\u{11350}" | "\u{1135D}".."\u{11361}" | "\u{11400}".."\u{11434}" | "\u{11447}".."\u{1144A}" | "\u{11480}".."\u{114AF}" | "\u{114C4}".."\u{114C5}" | "\u{114C7}" | "\u{11580}".."\u{115AE}" | "\u{115D8}".."\u{115DB}" | "\u{11600}".."\u{1162F}" | "\u{11644}" | "\u{11680}".."\u{116AA}" | "\u{11700}".."\u{1171A}" | "\u{11800}".."\u{1182B}" | "\u{118FF}" | "\u{11A00}" | "\u{11A0B}".."\u{11A32}" | "\u{11A3A}" | "\u{11A50}" | "\u{11A5C}".."\u{11A83}" | "\u{11A86}".."\u{11A89}" | "\u{11A9D}" | "\u{11AC0}".."\u{11AF8}" | "\u{11C00}".."\u{11C08}" | "\u{11C0A}".."\u{11C2E}" | "\u{11C40}" | "\u{11C72}".."\u{11C8F}" | "\u{11D00}".."\u{11D06}" | "\u{11D08}".."\u{11D09}" | "\u{11D0B}".."\u{11D30}" | "\u{11D46}" | "\u{11D60}".."\u{11D65}" | "\u{11D67}".."\u{11D68}" | "\u{11D6A}".."\u{11D89}" | "\u{11D98}" | "\u{11EE0}".."\u{11EF2}" | "\u{12000}".."\u{12399}" | "\u{12480}".."\u{12543}" | "\u{13000}".."\u{1342E}" | "\u{14400}".."\u{14646}" | "\u{16800}".."\u{16A38}" | "\u{16A40}".."\u{16A5E}" | "\u{16AD0}".."\u{16AED}" | "\u{16B00}".."\u{16B2F}" | "\u{16B63}".."\u{16B77}" | "\u{16B7D}".."\u{16B8F}" | "\u{16F00}".."\u{16F44}" | "\u{16F50}" | "\u{17000}".."\u{187F1}" | "\u{18800}".."\u{18AF2}" | "\u{1B000}".."\u{1B11E}" | "\u{1B170}".."\u{1B2FB}" | "\u{1BC00}".."\u{1BC6A}" | "\u{1BC70}".."\u{1BC7C}" | "\u{1BC80}".."\u{1BC88}" | "\u{1BC90}".."\u{1BC99}" | "\u{1E800}".."\u{1E8C4}" | "\u{1EE00}".."\u{1EE03}" | "\u{1EE05}".."\u{1EE1F}" | "\u{1EE21}".."\u{1EE22}" | "\u{1EE24}" | "\u{1EE27}" | "\u{1EE29}".."\u{1EE32}" | "\u{1EE34}".."\u{1EE37}" | "\u{1EE39}" | "\u{1EE3B}" | "\u{1EE42}" | "\u{1EE47}" | "\u{1EE49}" | "\u{1EE4B}" | "\u{1EE4D}".."\u{1EE4F}" | "\u{1EE51}".."\u{1EE52}" | "\u{1EE54}" | "\u{1EE57}" | "\u{1EE59}" | "\u{1EE5B}" | "\u{1EE5D}" | "\u{1EE5F}" | "\u{1EE61}".."\u{1EE62}" | "\u{1EE64}" | "\u{1EE67}".."\u{1EE6A}" | "\u{1EE6C}".."\u{1EE72}" | "\u{1EE74}".."\u{1EE77}" | "\u{1EE79}".."\u{1EE7C}" | "\u{1EE7E}" | "\u{1EE80}".."\u{1EE89}" | "\u{1EE8B}".."\u{1EE9B}" | "\u{1EEA1}".."\u{1EEA3}" | "\u{1EEA5}".."\u{1EEA9}" | "\u{1EEAB}".."\u{1EEBB}" | "\u{20000}".."\u{2A6D6}" | "\u{2A700}".."\u{2B734}" | "\u{2B740}".."\u{2B81D}" | "\u{2B820}".."\u{2CEA1}" | "\u{2CEB0}".."\u{2EBE0}" | "\u{2F800}".."\u{2FA1D}"
  unicode_mark_spacing_combining <- "\u{903}" | "\u{93B}" | "\u{93E}".."\u{940}" | "\u{949}".."\u{94C}" | "\u{94E}".."\u{94F}" | "\u{982}".."\u{983}" | "\u{9BE}".."\u{9C0}" | "\u{9C7}".."\u{9C8}" | "\u{9CB}".."\u{9CC}" | "\u{9D7}" | "\u{A03}" | "\u{A3E}".."\u{A40}" | "\u{A83}" | "\u{ABE}".."\u{AC0}" | "\u{AC9}" | "\u{ACB}".."\u{ACC}" | "\u{B02}".."\u{B03}" | "\u{B3E}" | "\u{B40}" | "\u{B47}".."\u{B48}" | "\u{B4B}".."\u{B4C}" | "\u{B57}" | "\u{BBE}".."\u{BBF}" | "\u{BC1}".."\u{BC2}" | "\u{BC6}".."\u{BC8}" | "\u{BCA}".."\u{BCC}" | "\u{BD7}" | "\u{C01}".."\u{C03}" | "\u{C41}".."\u{C44}" | "\u{C82}".."\u{C83}" | "\u{CBE}" | "\u{CC0}".."\u{CC4}" | "\u{CC7}".."\u{CC8}" | "\u{CCA}".."\u{CCB}" | "\u{CD5}".."\u{CD6}" | "\u{D02}".."\u{D03}" | "\u{D3E}".."\u{D40}" | "\u{D46}".."\u{D48}" | "\u{D4A}".."\u{D4C}" | "\u{D57}" | "\u{D82}".."\u{D83}" | "\u{DCF}".."\u{DD1}" | "\u{DD8}".."\u{DDF}" | "\u{DF2}".."\u{DF3}" | "\u{F3E}".."\u{F3F}" | "\u{F7F}" | "\u{102B}".."\u{102C}" | "\u{1031}" | "\u{1038}" | "\u{103B}".."\u{103C}" | "\u{1056}".."\u{1057}" | "\u{1062}".."\u{1064}" | "\u{1067}".."\u{106D}" | "\u{1083}".."\u{1084}" | "\u{1087}".."\u{108C}" | "\u{108F}" | "\u{109A}".."\u{109C}" | "\u{17B6}" | "\u{17BE}".."\u{17C5}" | "\u{17C7}".."\u{17C8}" | "\u{1923}".."\u{1926}" | "\u{1929}".."\u{192B}" | "\u{1930}".."\u{1931}" | "\u{1933}".."\u{1938}" | "\u{1A19}".."\u{1A1A}" | "\u{1A55}" | "\u{1A57}" | "\u{1A61}" | "\u{1A63}".."\u{1A64}" | "\u{1A6D}".."\u{1A72}" | "\u{1B04}" | "\u{1B35}" | "\u{1B3B}" | "\u{1B3D}".."\u{1B41}" | "\u{1B43}".."\u{1B44}" | "\u{1B82}" | "\u{1BA1}" | "\u{1BA6}".."\u{1BA7}" | "\u{1BAA}" | "\u{1BE7}" | "\u{1BEA}".."\u{1BEC}" | "\u{1BEE}" | "\u{1BF2}".."\u{1BF3}" | "\u{1C24}".."\u{1C2B}" | "\u{1C34}".."\u{1C35}" | "\u{1CE1}" | "\u{1CF2}".."\u{1CF3}" | "\u{1CF7}" | "\u{302E}".."\u{302F}" | "\u{A823}".."\u{A824}" | "\u{A827}" | "\u{A880}".."\u{A881}" | "\u{A8B4}".."\u{A8C3}" | "\u{A952}".."\u{A953}" | "\u{A983}" | "\u{A9B4}".."\u{A9B5}" | "\u{A9BA}".."\u{A9BB}" | "\u{A9BD}".."\u{A9C0}" | "\u{AA2F}".."\u{AA30}" | "\u{AA33}".."\u{AA34}" | "\u{AA4D}" | "\u{AA7B}" | "\u{AA7D}" | "\u{AAEB}" | "\u{AAEE}".."\u{AAEF}" | "\u{AAF5}" | "\u{ABE3}".."\u{ABE4}" | "\u{ABE6}".."\u{ABE7}" | "\u{ABE9}".."\u{ABEA}" | "\u{ABEC}" | "\u{11000}" | "\u{11002}" | "\u{11082}" | "\u{110B0}".."\u{110B2}" | "\u{110B7}".."\u{110B8}" | "\u{1112C}" | "\u{11145}".."\u{11146}" | "\u{11182}" | "\u{111B3}".."\u{111B5}" | "\u{111BF}".."\u{111C0}" | "\u{1122C}".."\u{1122E}" | "\u{11232}".."\u{11233}" | "\u{11235}" | "\u{112E0}".."\u{112E2}" | "\u{11302}".."\u{11303}" | "\u{1133E}".."\u{1133F}" | "\u{11341}".."\u{11344}" | "\u{11347}".."\u{11348}" | "\u{1134B}".."\u{1134D}" | "\u{11357}" | "\u{11362}".."\u{11363}" | "\u{11435}".."\u{11437}" | "\u{11440}".."\u{11441}" | "\u{11445}" | "\u{114B0}".."\u{114B2}" | "\u{114B9}" | "\u{114BB}".."\u{114BE}" | "\u{114C1}" | "\u{115AF}".."\u{115B1}" | "\u{115B8}".."\u{115BB}" | "\u{115BE}" | "\u{11630}".."\u{11632}" | "\u{1163B}".."\u{1163C}" | "\u{1163E}" | "\u{116AC}" | "\u{116AE}".."\u{116AF}" | "\u{116B6}" | "\u{11720}".."\u{11721}" | "\u{11726}" | "\u{1182C}".."\u{1182E}" | "\u{11838}" | "\u{11A39}" | "\u{11A57}".."\u{11A58}" | "\u{11A97}" | "\u{11C2F}" | "\u{11C3E}" | "\u{11CA9}" | "\u{11CB1}" | "\u{11CB4}" | "\u{11D8A}".."\u{11D8E}" | "\u{11D93}".."\u{11D94}" | "\u{11D96}" | "\u{11EF5}".."\u{11EF6}" | "\u{16F51}".."\u{16F7E}" | "\u{1D165}".."\u{1D166}" | "\u{1D16D}".."\u{1D172}"
  unicode_mark_nonspacing <- "\u{300}".."\u{36F}" | "\u{483}".."\u{487}" | "\u{591}".."\u{5BD}" | "\u{5BF}" | "\u{5C1}".."\u{5C2}" | "\u{5C4}".."\u{5C5}" | "\u{5C7}" | "\u{610}".."\u{61A}" | "\u{64B}".."\u{65F}" | "\u{670}" | "\u{6D6}".."\u{6DC}" | "\u{6DF}".."\u{6E4}" | "\u{6E7}".."\u{6E8}" | "\u{6EA}".."\u{6ED}" | "\u{711}" | "\u{730}".."\u{74A}" | "\u{7A6}".."\u{7B0}" | "\u{7EB}".."\u{7F3}" | "\u{7FD}" | "\u{816}".."\u{819}" | "\u{81B}".."\u{823}" | "\u{825}".."\u{827}" | "\u{829}".."\u{82D}" | "\u{859}".."\u{85B}" | "\u{8D3}".."\u{8E1}" | "\u{8E3}".."\u{902}" | "\u{93A}" | "\u{93C}" | "\u{941}".."\u{948}" | "\u{94D}" | "\u{951}".."\u{957}" | "\u{962}".."\u{963}" | "\u{981}" | "\u{9BC}" | "\u{9C1}".."\u{9C4}" | "\u{9CD}" | "\u{9E2}".."\u{9E3}" | "\u{9FE}" | "\u{A01}".."\u{A02}" | "\u{A3C}" | "\u{A41}".."\u{A42}" | "\u{A47}".."\u{A48}" | "\u{A4B}".."\u{A4D}" | "\u{A51}" | "\u{A70}".."\u{A71}" | "\u{A75}" | "\u{A81}".."\u{A82}" | "\u{ABC}" | "\u{AC1}".."\u{AC5}" | "\u{AC7}".."\u{AC8}" | "\u{ACD}" | "\u{AE2}".."\u{AE3}" | "\u{AFA}".."\u{AFF}" | "\u{B01}" | "\u{B3C}" | "\u{B3F}" | "\u{B41}".."\u{B44}" | "\u{B4D}" | "\u{B56}" | "\u{B62}".."\u{B63}" | "\u{B82}" | "\u{BC0}" | "\u{BCD}" | "\u{C00}" | "\u{C04}" | "\u{C3E}".."\u{C40}" | "\u{C46}".."\u{C48}" | "\u{C4A}".."\u{C4D}" | "\u{C55}".."\u{C56}" | "\u{C62}".."\u{C63}" | "\u{C81}" | "\u{CBC}" | "\u{CBF}" | "\u{CC6}" | "\u{CCC}".."\u{CCD}" | "\u{CE2}".."\u{CE3}" | "\u{D00}".."\u{D01}" | "\u{D3B}".."\u{D3C}" | "\u{D41}".."\u{D44}" | "\u{D4D}" | "\u{D62}".."\u{D63}" | "\u{DCA}" | "\u{DD2}".."\u{DD4}" | "\u{DD6}" | "\u{E31}" | "\u{E34}".."\u{E3A}" | "\u{E47}".."\u{E4E}" | "\u{EB1}" | "\u{EB4}".."\u{EB9}" | "\u{EBB}".."\u{EBC}" | "\u{EC8}".."\u{ECD}" | "\u{F18}".."\u{F19}" | "\u{F35}" | "\u{F37}" | "\u{F39}" | "\u{F71}".."\u{F7E}" | "\u{F80}".."\u{F84}" | "\u{F86}".."\u{F87}" | "\u{F8D}".."\u{F97}" | "\u{F99}".."\u{FBC}" | "\u{FC6}" | "\u{102D}".."\u{1030}" | "\u{1032}".."\u{1037}" | "\u{1039}".."\u{103A}" | "\u{103D}".."\u{103E}" | "\u{1058}".."\u{1059}" | "\u{105E}".."\u{1060}" | "\u{1071}".."\u{1074}" | "\u{1082}" | "\u{1085}".."\u{1086}" | "\u{108D}" | "\u{109D}" | "\u{135D}".."\u{135F}" | "\u{1712}".."\u{1714}" | "\u{1732}".."\u{1734}" | "\u{1752}".."\u{1753}" | "\u{1772}".."\u{1773}" | "\u{17B4}".."\u{17B5}" | "\u{17B7}".."\u{17BD}" | "\u{17C6}" | "\u{17C9}".."\u{17D3}" | "\u{17DD}" | "\u{180B}".."\u{180D}" | "\u{1885}".."\u{1886}" | "\u{18A9}" | "\u{1920}".."\u{1922}" | "\u{1927}".."\u{1928}" | "\u{1932}" | "\u{1939}".."\u{193B}" | "\u{1A17}".."\u{1A18}" | "\u{1A1B}" | "\u{1A56}" | "\u{1A58}".."\u{1A5E}" | "\u{1A60}" | "\u{1A62}" | "\u{1A65}".."\u{1A6C}" | "\u{1A73}".."\u{1A7C}" | "\u{1A7F}" | "\u{1AB0}".."\u{1ABD}" | "\u{1B00}".."\u{1B03}" | "\u{1B34}" | "\u{1B36}".."\u{1B3A}" | "\u{1B3C}" | "\u{1B42}" | "\u{1B6B}".."\u{1B73}" | "\u{1B80}".."\u{1B81}" | "\u{1BA2}".."\u{1BA5}" | "\u{1BA8}".."\u{1BA9}" | "\u{1BAB}".."\u{1BAD}" | "\u{1BE6}" | "\u{1BE8}".."\u{1BE9}" | "\u{1BED}" | "\u{1BEF}".."\u{1BF1}" | "\u{1C2C}".."\u{1C33}" | "\u{1C36}".."\u{1C37}" | "\u{1CD0}".."\u{1CD2}" | "\u{1CD4}".."\u{1CE0}" | "\u{1CE2}".."\u{1CE8}" | "\u{1CED}" | "\u{1CF4}" | "\u{1CF8}".."\u{1CF9}" | "\u{1DC0}".."\u{1DF9}" | "\u{1DFB}".."\u{1DFF}" | "\u{20D0}".."\u{20DC}" | "\u{20E1}" | "\u{20E5}".."\u{20F0}" | "\u{2CEF}".."\u{2CF1}" | "\u{2D7F}" | "\u{2DE0}".."\u{2DFF}" | "\u{302A}".."\u{302D}" | "\u{3099}".."\u{309A}" | "\u{A66F}" | "\u{A674}".."\u{A67D}" | "\u{A69E}".."\u{A69F}" | "\u{A6F0}".."\u{A6F1}" | "\u{A802}" | "\u{A806}" | "\u{A80B}" | "\u{A825}".."\u{A826}" | "\u{A8C4}".."\u{A8C5}" | "\u{A8E0}".."\u{A8F1}" | "\u{A8FF}" | "\u{A926}".."\u{A92D}" | "\u{A947}".."\u{A951}" | "\u{A980}".."\u{A982}" | "\u{A9B3}" | "\u{A9B6}".."\u{A9B9}" | "\u{A9BC}" | "\u{A9E5}" | "\u{AA29}".."\u{AA2E}" | "\u{AA31}".."\u{AA32}" | "\u{AA35}".."\u{AA36}" | "\u{AA43}" | "\u{AA4C}" | "\u{AA7C}" | "\u{AAB0}" | "\u{AAB2}".."\u{AAB4}" | "\u{AAB7}".."\u{AAB8}" | "\u{AABE}".."\u{AABF}" | "\u{AAC1}" | "\u{AAEC}".."\u{AAED}" | "\u{AAF6}" | "\u{ABE5}" | "\u{ABE8}" | "\u{ABED}" | "\u{FB1E}" | "\u{FE00}".."\u{FE0F}" | "\u{FE20}".."\u{FE2F}" | "\u{101FD}" | "\u{102E0}" | "\u{10376}".."\u{1037A}" | "\u{10A01}".."\u{10A03}" | "\u{10A05}".."\u{10A06}" | "\u{10A0C}".."\u{10A0F}" | "\u{10A38}".."\u{10A3A}" | "\u{10A3F}" | "\u{10AE5}".."\u{10AE6}" | "\u{10D24}".."\u{10D27}" | "\u{10F46}".."\u{10F50}" | "\u{11001}" | "\u{11038}".."\u{11046}" | "\u{1107F}".."\u{11081}" | "\u{110B3}".."\u{110B6}" | "\u{110B9}".."\u{110BA}" | "\u{11100}".."\u{11102}" | "\u{11127}".."\u{1112B}" | "\u{1112D}".."\u{11134}" | "\u{11173}" | "\u{11180}".."\u{11181}" | "\u{111B6}".."\u{111BE}" | "\u{111C9}".."\u{111CC}" | "\u{1122F}".."\u{11231}" | "\u{11234}" | "\u{11236}".."\u{11237}" | "\u{1123E}" | "\u{112DF}" | "\u{112E3}".."\u{112EA}" | "\u{11300}".."\u{11301}" | "\u{1133B}".."\u{1133C}" | "\u{11340}" | "\u{11366}".."\u{1136C}" | "\u{11370}".."\u{11374}" | "\u{11438}".."\u{1143F}" | "\u{11442}".."\u{11444}" | "\u{11446}" | "\u{1145E}" | "\u{114B3}".."\u{114B8}" | "\u{114BA}" | "\u{114BF}".."\u{114C0}" | "\u{114C2}".."\u{114C3}" | "\u{115B2}".."\u{115B5}" | "\u{115BC}".."\u{115BD}" | "\u{115BF}".."\u{115C0}" | "\u{115DC}".."\u{115DD}" | "\u{11633}".."\u{1163A}" | "\u{1163D}" | "\u{1163F}".."\u{11640}" | "\u{116AB}" | "\u{116AD}" | "\u{116B0}".."\u{116B5}" | "\u{116B7}" | "\u{1171D}".."\u{1171F}" | "\u{11722}".."\u{11725}" | "\u{11727}".."\u{1172B}" | "\u{1182F}".."\u{11837}" | "\u{11839}".."\u{1183A}" | "\u{11A01}".."\u{11A0A}" | "\u{11A33}".."\u{11A38}" | "\u{11A3B}".."\u{11A3E}" | "\u{11A47}" | "\u{11A51}".."\u{11A56}" | "\u{11A59}".."\u{11A5B}" | "\u{11A8A}".."\u{11A96}" | "\u{11A98}".."\u{11A99}" | "\u{11C30}".."\u{11C36}" | "\u{11C38}".."\u{11C3D}" | "\u{11C3F}" | "\u{11C92}".."\u{11CA7}" | "\u{11CAA}".."\u{11CB0}" | "\u{11CB2}".."\u{11CB3}" | "\u{11CB5}".."\u{11CB6}" | "\u{11D31}".."\u{11D36}" | "\u{11D3A}" | "\u{11D3C}".."\u{11D3D}" | "\u{11D3F}".."\u{11D45}" | "\u{11D47}" | "\u{11D90}".."\u{11D91}" | "\u{11D95}" | "\u{11D97}" | "\u{11EF3}".."\u{11EF4}" | "\u{16AF0}".."\u{16AF4}" | "\u{16B30}".."\u{16B36}" | "\u{16F8F}".."\u{16F92}" | "\u{1BC9D}".."\u{1BC9E}" | "\u{1D167}".."\u{1D169}" | "\u{1D17B}".."\u{1D182}" | "\u{1D185}".."\u{1D18B}" | "\u{1D1AA}".."\u{1D1AD}" | "\u{1D242}".."\u{1D244}" | "\u{1DA00}".."\u{1DA36}" | "\u{1DA3B}".."\u{1DA6C}" | "\u{1DA75}" | "\u{1DA84}" | "\u{1DA9B}".."\u{1DA9F}" | "\u{1DAA1}".."\u{1DAAF}" | "\u{1E000}".."\u{1E006}" | "\u{1E008}".."\u{1E018}" | "\u{1E01B}".."\u{1E021}" | "\u{1E023}".."\u{1E024}" | "\u{1E026}".."\u{1E02A}" | "\u{1E8D0}".."\u{1E8D6}" | "\u{1E944}".."\u{1E94A}" | "\u{E0100}".."\u{E01EF}"
  unicode_number_letter <- "\u{16EE}".."\u{16F0}" | "\u{2160}".."\u{2182}" | "\u{2185}".."\u{2188}" | "\u{3007}" | "\u{3021}".."\u{3029}" | "\u{3038}".."\u{303A}" | "\u{A6E6}".."\u{A6EF}" | "\u{10140}".."\u{10174}" | "\u{10341}" | "\u{1034A}" | "\u{103D1}".."\u{103D5}" | "\u{12400}".."\u{1246E}"
  unicode_punctuation_connector <- "\u{5F}" | "\u{203F}".."\u{2040}" | "\u{2054}" | "\u{FE33}".."\u{FE34}" | "\u{FE4D}".."\u{FE4F}" | "\u{FF3F}"
  unicode_separator_space <- "\u{20}" | "\u{A0}" | "\u{1680}" | "\u{2000}".."\u{200A}" | "\u{202F}" | "\u{205F}" | "\u{3000}"
  unicode_letter <- unicode_upper | unicode_lower | unicode_titlecase | unicode_modifier | unicode_other_letter
}
